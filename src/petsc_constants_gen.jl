# Autogenerated enum values

typealias InsertMode Cint
global const INSERT_VALUES = convert(Int32, 1);
global const ADD_VALUES    = convert(Int32, 2);

typealias NormType Int32
global const NORM_1         = convert(Int32, 0);
global const NORM_2         = convert(Int32, 1);
global const NORM_FROBENIUS = convert(Int32 ,2);
global const NORM_INFINITY  = convert(Int32 ,3);
global const NORM_MAX       = NORM_INFINITY;



typealias MatAssemblyType Cint
global const  MAT_FLUSH_ASSEMBLY = convert(Int32, 1)
global const  MAT_FINAL_ASSEMBLY = convert(Int32, 0)

# vector formats
typealias VecType ASCIIString
global const VECSEQ = "seq"
global const VECMPI = "mpi"
global const VECSTANDARD = "standard"
global const VECSHARED = "shared"
global const VECSEQCUSP = "seqcusp"
global const VECMPICUSP = "mpicusp"
global const VECCUSP = "cusp"
global const VECSEQVIENNACL = "seqviennacl"
global const VECMPIVIENNACL = "mpiviennacl"
global const VECVIENNACL = "viennacl"
global const VECSEQCUDA = ""
global const VECMPICUDA = ""
global const VECCUDA = ""
global const VECNEST = "nest"

export PetscMatStructure
export DIFFERENT_NONZERO_PATTERN, SUBSET_NONZERO_PATTERN, SAME_NONZERO_PATTERN
# begin enum MatStructure
typealias PetscMatStructure Int32
global const DIFFERENT_NONZERO_PATTERN = (Int32)(0)
global const SUBSET_NONZERO_PATTERN = (Int32)(1)
global const SAME_NONZERO_PATTERN = (Int32)(2)
# end enum MatStructure

export MATSEQAIJ, MATMPIAIJ, MATMPIBAIJ
# matrix types
typealias MatType ASCIIString
global const MATSAME = "same"
global const MATMAIJ = "maij"
global const MATSEQMAIJ = "seqmaij"
global const MATMPIMAIJ = "mpimaij"
global const MATIS = "is"
global const MATAIJ = "aij"
global const MATSEQAIJ = "seqaij"
global const MATMPIAIJ = "mpiaij"
global const MATAIJCRL = "aijcrl"
global const MATSEQAIJCRL = "seqaijcrl"
global const MATMPIAIJCRL = "mpiaijcrl"
global const MATAIJCUSP = "aijcusp"
global const MATSEQAIJCUSP = "seqaijcusp"
global const MATMPIAIJCUSP = "mpiaijcusp"
global const MATAIJCUSPARSE = "aijcusparse"
global const MATSEQAIJCUSPARSE = "seqaijcusparse"
global const MATMPIAIJCUSPARSE = "mpiaijcusparse"
global const MATAIJVIENNACL = "aijviennacl"
global const MATSEQAIJVIENNACL = "seqaijviennacl"
global const MATMPIAIJVIENNACL = "mpiaijviennacl"
global const MATAIJPERM = "aijperm"
global const MATSEQAIJPERM = "seqaijperm"
global const MATMPIAIJPERM = "mpiaijperm"
global const MATSHELL = "shell"
global const MATDENSE = "dense"
global const MATSEQDENSE = "seqdense"
global const MATMPIDENSE = "mpidense"
global const MATELEMENTAL = "elemental"
global const MATBAIJ = "baij"
global const MATSEQBAIJ = "seqbaij"
global const MATMPIBAIJ = "mpibaij"
global const MATMPIADJ = "mpiadj"
global const MATSBAIJ = "sbaij"
global const MATSEQSBAIJ = "seqsbaij"
global const MATMPISBAIJ = "mpisbaij"
global const MATSEQBSTRM = "seqbstrm"
global const MATMPIBSTRM = "mpibstrm"
global const MATBSTRM = "bstrm"
global const MATSEQSBSTRM = "seqsbstrm"
global const MATMPISBSTRM = "mpisbstrm"
global const MATSBSTRM = "sbstrm"
global const MATDAAD = "daad"
global const MATMFFD = "mffd"
global const MATNORMAL = "normal"
global const MATLRC = "lrc"
global const MATSCATTER = "scatter"
global const MATBLOCKMAT = "blockmat"
global const MATCOMPOSITE = "composite"
global const MATFFT = "fft"
global const MATFFTW = "fftw"
global const MATSEQCUFFT = "seqcufft"
global const MATTRANSPOSEMAT = "transpose"
global const MATSCHURCOMPLEMENT = "schurcomplement"
global const MATPYTHON = "python"
global const MATHYPRESTRUCT = "hyprestruct"
global const MATHYPRESSTRUCT = "hypresstruct"
global const MATSUBMATRIX = "submatrix"
global const MATLOCALREF = "localref"
global const MATNEST = "nest"

export MAT_LOCAL, MAT_GLOBAL_MAX, MAT_GLOBAL_SUM
typealias MatInfoType Int32
global const MAT_LOCAL = (Int32)(1)
global const MAT_GLOBAL_MAX = (Int32)(2)
global const MAT_GLOBAL_SUM = (Int32)(3)
#

export MAT_INITIAL_MATRIX, MAT_REUSE_MATRIX, MAT_IGNORE_MATRIX
typealias MatReuse Int32
global const MAT_INITIAL_MATRIX = (Int32)(0)
global const MAT_REUSE_MATRIX = (Int32)(1)
global const MAT_IGNORE_MATRIX = (Int32)(2)
#

export KSPType
# types of KSP solvers
typealias KSPType ASCIIString
global const KSPRICHARDSON = "richardson"
global const KSPCHEBYSHEV = "chebyshev"
global const KSPCG       =  "cg"
global const KSPGROPPCG  =  "groppcg"
global const KSPPIPECG   =  "pipecg"
global const   KSPCGNE   =    "cgne"
global const   KSPNASH   =    "nash"
global const   KSPSTCG   =    "stcg"
global const   KSPGLTR   =    "gltr"
global const KSPFCG      =  "fcg"
global const KSPGMRES    =  "gmres"
global const   KSPFGMRES  =   "fgmres"
global const   KSPLGMRES  =   "lgmres"
global const   KSPDGMRES  =   "dgmres"
global const   KSPPGMRES  =   "pgmres"
global const KSPTCQMR     = "tcqmr"
global const KSPBCGS      = "bcgs"
global const   KSPIBCGS   =   "ibcgs"
global const   KSPFBCGS   =   "fbcgs"
global const   KSPFBCGSR  =   "fbcgsr"
global const   KSPBCGSL   =   "bcgsl"
global const KSPCGS       = "cgs"
global const KSPTFQMR     = "tfqmr"
global const KSPCR        = "cr"
global const KSPPIPECR    = "pipecr"
global const KSPLSQR      = "lsqr"
global const KSPPREONLY   = "preonly"
global const KSPQCG       = "qcg"
global const KSPBICG      = "bicg"
global const KSPMINRES    = "minres"
global const KSPSYMMLQ    = "symmlq"
global const KSPLCD       = "lcd"
global const KSPPYTHON    = "python"
global const KSPGCR       = "gcr"

typealias KSPNormType Cint
global const KSP_NORM_DEFAULT = (Int32)(-1)
global const KSP_NORM_NONE = (Int32)(0)
global const KSP_NORM_PRECONDITIONED = (Int32)(1)
global const KSP_NORM_UNPRECONDITIONED = (Int32)(2)
global const KSP_NORM_NATURAL = (Int32)(3)
# end enum KSPNormType

export KSPConvergedReason

typealias KSPConvergedReason Cint
global const KSP_CONVERGED_RTOL_NORMAL = (Int32)(1)
global const KSP_CONVERGED_ATOL_NORMAL = (Int32)(9)
global const KSP_CONVERGED_RTOL = (Int32)(2)
global const KSP_CONVERGED_ATOL = (Int32)(3)
global const KSP_CONVERGED_ITS = (Int32)(4)
global const KSP_CONVERGED_CG_NEG_CURVE = (Int32)(5)
global const KSP_CONVERGED_CG_CONSTRAINED = (Int32)(6)
global const KSP_CONVERGED_STEP_LENGTH = (Int32)(7)
global const KSP_CONVERGED_HAPPY_BREAKDOWN = (Int32)(8)
global const KSP_DIVERGED_NULL = (Int32)(-2)
global const KSP_DIVERGED_ITS = (Int32)(-3)
global const KSP_DIVERGED_DTOL = (Int32)(-4)
global const KSP_DIVERGED_BREAKDOWN = (Int32)(-5)
global const KSP_DIVERGED_BREAKDOWN_BICG = (Int32)(-6)
global const KSP_DIVERGED_NONSYMMETRIC = (Int32)(-7)
global const KSP_DIVERGED_INDEFINITE_PC = (Int32)(-8)
global const KSP_DIVERGED_NANORINF = (Int32)(-9)
global const KSP_DIVERGED_INDEFINITE_MAT = (Int32)(-10)
global const KSP_DIVERGED_PCSETUP_FAILED = (Int32)(-11)
global const KSP_CONVERGED_ITERATING = (Int32)(0)



global const KSP_NORM_MAX = KSP_NORM_NATURAL + 1


typealias PCType ASCIIString
global const PCNONE = "none"
global const PCJACOBI = "jacobi"
global const PCSOR = "sor"
global const PCLU = "lu"
global const PCSHELL = "shell"
global const PCBJACOBI = "bjacobi"
global const PCMG = "mg"
global const PCEISENSTAT = "eisenstat"
global const PCILU = "ilu"
global const PCICC = "icc"
global const PCASM = "asm"
global const PCGASM = "gasm"
global const PCKSP = "ksp"
global const PCCOMPOSITE = "composite"
global const PCREDUNDANT = "redundant"
global const PCSPAI = "spai"
global const PCNN = "nn"
global const PCCHOLESKY = "cholesky"
global const PCPBJACOBI = "pbjacobi"
global const PCMAT = "mat"
global const PCHYPRE = "hypre"
global const PCPARMS = "parms"
global const PCFIELDSPLIT = "fieldsplit"
global const PCTFS = "tfs"
global const PCML = "ml"
global const PCGALERKIN = "galerkin"
global const PCEXOTIC = "exotic"
global const PCCP = "cp"
global const PCBFBT = "bfbt"
global const PCLSC = "lsc"
global const PCPYTHON = "python"
global const PCPFMG = "pfmg"
global const PCSYSPFMG = "syspfmg"
global const PCREDISTRIBUTE = "redistribute"
global const PCSVD = "svd"
global const PCGAMG = "gamg"
global const PCSACUSP = "sacusp"
global const PCSACUSPPOLY = "sacusppoly"
global const PCBICGSTABCUSP = "bicgstabcusp"
global const PCAINVCUSP = "ainvcusp"
global const PCBDDC = "bddc"
global const PCKACZMARZ = "kaczmarz"

# begin enum PCSide
typealias PCSide Cint
global const PC_SIDE_DEFAULT = (Int32)(-1)
global const PC_LEFT = (Int32)(0)
global const PC_RIGHT = (Int32)(1)
global const PC_SYMMETRIC = (Int32)(2)
# end enum PCSide

typealias PCJacobiType Int32
global const PC_JACOBI_DIAGONAL = (Int32)(0)
global const PC_JACOBI_ROWMAX = (Int32)(1)
global const PC_JACOBI_ROWSUM = (Int32)(2)
#


typealias PetscErrorType Int32
global const PETSC_ERROR_INITIAL = (Int32)(0)
global const PETSC_ERROR_REPEAT = (Int32)(1)
global const PETSC_ERROR_IN_CXX = (Int32)(2)
#


# begin enum MatOption
typealias MatOption Cint
global const MAT_OPTION_MIN = (Int32)(-5)
global const MAT_NEW_NONZERO_LOCATION_ERR = (Int32)(-4)
global const MAT_UNUSED_NONZERO_LOCATION_ERR = (Int32)(-3)
global const MAT_NEW_NONZERO_ALLOCATION_ERR = (Int32)(-2)
global const MAT_ROW_ORIENTED = (Int32)(-1)
global const MAT_SYMMETRIC = (Int32)(1)
global const MAT_STRUCTURALLY_SYMMETRIC = (Int32)(2)
global const MAT_NEW_DIAGONALS = (Int32)(3)
global const MAT_IGNORE_OFF_PROC_ENTRIES = (Int32)(4)
global const MAT_USE_HASH_TABLE = (Int32)(5)
global const MAT_KEEP_NONZERO_PATTERN = (Int32)(6)
global const MAT_IGNORE_ZERO_ENTRIES = (Int32)(7)
global const MAT_USE_INODES = (Int32)(8)
global const MAT_HERMITIAN = (Int32)(9)
global const MAT_SYMMETRY_ETERNAL = (Int32)(10)
global const MAT_IGNORE_LOWER_TRIANGULAR = (Int32)(12)
global const MAT_ERROR_LOWER_TRIANGULAR = (Int32)(13)
global const MAT_GETROW_UPPERTRIANGULAR = (Int32)(14)
global const MAT_SPD = (Int32)(15)
global const MAT_NO_OFF_PROC_ZERO_ROWS = (Int32)(16)
global const MAT_NO_OFF_PROC_ENTRIES = (Int32)(17)
global const MAT_NEW_NONZERO_LOCATIONS = (Int32)(18)
global const MAT_OPTION_MAX = (Int32)(19)
# end enum MatOption

# begin enum MatOperation
typealias MatOperation UInt32
global const MATOP_SET_VALUES = (UInt32)(0)
global const MATOP_GET_ROW = (UInt32)(1)
global const MATOP_RESTORE_ROW = (UInt32)(2)
global const MATOP_MULT = (UInt32)(3)
global const MATOP_MULT_ADD = (UInt32)(4)
global const MATOP_MULT_TRANSPOSE = (UInt32)(5)
global const MATOP_MULT_TRANSPOSE_ADD = (UInt32)(6)
global const MATOP_SOLVE = (UInt32)(7)
global const MATOP_SOLVE_ADD = (UInt32)(8)
global const MATOP_SOLVE_TRANSPOSE = (UInt32)(9)
global const MATOP_SOLVE_TRANSPOSE_ADD = (UInt32)(10)
global const MATOP_LUFACTOR = (UInt32)(11)
global const MATOP_CHOLESKYFACTOR = (UInt32)(12)
global const MATOP_SOR = (UInt32)(13)
global const MATOP_TRANSPOSE = (UInt32)(14)
global const MATOP_GETINFO = (UInt32)(15)
global const MATOP_EQUAL = (UInt32)(16)
global const MATOP_GET_DIAGONAL = (UInt32)(17)
global const MATOP_DIAGONAL_SCALE = (UInt32)(18)
global const MATOP_NORM = (UInt32)(19)
global const MATOP_ASSEMBLY_BEGIN = (UInt32)(20)
global const MATOP_ASSEMBLY_END = (UInt32)(21)
global const MATOP_SET_OPTION = (UInt32)(22)
global const MATOP_ZERO_ENTRIES = (UInt32)(23)
global const MATOP_ZERO_ROWS = (UInt32)(24)
global const MATOP_LUFACTOR_SYMBOLIC = (UInt32)(25)
global const MATOP_LUFACTOR_NUMERIC = (UInt32)(26)
global const MATOP_CHOLESKY_FACTOR_SYMBOLIC = (UInt32)(27)
global const MATOP_CHOLESKY_FACTOR_NUMERIC = (UInt32)(28)
global const MATOP_SETUP_PREALLOCATION = (UInt32)(29)
global const MATOP_ILUFACTOR_SYMBOLIC = (UInt32)(30)
global const MATOP_ICCFACTOR_SYMBOLIC = (UInt32)(31)
global const MATOP_DUPLICATE = (UInt32)(34)
global const MATOP_FORWARD_SOLVE = (UInt32)(35)
global const MATOP_BACKWARD_SOLVE = (UInt32)(36)
global const MATOP_ILUFACTOR = (UInt32)(37)
global const MATOP_ICCFACTOR = (UInt32)(38)
global const MATOP_AXPY = (UInt32)(39)
global const MATOP_GET_SUBMATRICES = (UInt32)(40)
global const MATOP_INCREASE_OVERLAP = (UInt32)(41)
global const MATOP_GET_VALUES = (UInt32)(42)
global const MATOP_COPY = (UInt32)(43)
global const MATOP_GET_ROW_MAX = (UInt32)(44)
global const MATOP_SCALE = (UInt32)(45)
global const MATOP_SHIFT = (UInt32)(46)
global const MATOP_DIAGONAL_SET = (UInt32)(47)
global const MATOP_ZERO_ROWS_COLUMNS = (UInt32)(48)
global const MATOP_SET_RANDOM = (UInt32)(49)
global const MATOP_GET_ROW_IJ = (UInt32)(50)
global const MATOP_RESTORE_ROW_IJ = (UInt32)(51)
global const MATOP_GET_COLUMN_IJ = (UInt32)(52)
global const MATOP_RESTORE_COLUMN_IJ = (UInt32)(53)
global const MATOP_FDCOLORING_CREATE = (UInt32)(54)
global const MATOP_COLORING_PATCH = (UInt32)(55)
global const MATOP_SET_UNFACTORED = (UInt32)(56)
global const MATOP_PERMUTE = (UInt32)(57)
global const MATOP_SET_VALUES_BLOCKED = (UInt32)(58)
global const MATOP_GET_SUBMATRIX = (UInt32)(59)
global const MATOP_DESTROY = (UInt32)(60)
global const MATOP_VIEW = (UInt32)(61)
global const MATOP_CONVERT_FROM = (UInt32)(62)
global const MATOP_MATMAT_MULT = (UInt32)(63)
global const MATOP_MATMAT_MULT_SYMBOLIC = (UInt32)(64)
global const MATOP_MATMAT_MULT_NUMERIC = (UInt32)(65)
global const MATOP_SET_LOCAL_TO_GLOBAL_MAP = (UInt32)(66)
global const MATOP_SET_VALUES_LOCAL = (UInt32)(67)
global const MATOP_ZERO_ROWS_LOCAL = (UInt32)(68)
global const MATOP_GET_ROW_MAX_ABS = (UInt32)(69)
global const MATOP_GET_ROW_MIN_ABS = (UInt32)(70)
global const MATOP_CONVERT = (UInt32)(71)
global const MATOP_SET_COLORING = (UInt32)(72)
global const MATOP_SET_VALUES_ADIFOR = (UInt32)(74)
global const MATOP_FD_COLORING_APPLY = (UInt32)(75)
global const MATOP_SET_FROM_OPTIONS = (UInt32)(76)
global const MATOP_MULT_CONSTRAINED = (UInt32)(77)
global const MATOP_MULT_TRANSPOSE_CONSTRAIN = (UInt32)(78)
global const MATOP_FIND_ZERO_DIAGONALS = (UInt32)(79)
global const MATOP_MULT_MULTIPLE = (UInt32)(80)
global const MATOP_SOLVE_MULTIPLE = (UInt32)(81)
global const MATOP_GET_INERTIA = (UInt32)(82)
global const MATOP_LOAD = (UInt32)(83)
global const MATOP_IS_SYMMETRIC = (UInt32)(84)
global const MATOP_IS_HERMITIAN = (UInt32)(85)
global const MATOP_IS_STRUCTURALLY_SYMMETRIC = (UInt32)(86)
global const MATOP_SET_VALUES_BLOCKEDLOCAL = (UInt32)(87)
global const MATOP_GET_VECS = (UInt32)(88)
global const MATOP_MAT_MULT = (UInt32)(89)
global const MATOP_MAT_MULT_SYMBOLIC = (UInt32)(90)
global const MATOP_MAT_MULT_NUMERIC = (UInt32)(91)
global const MATOP_PTAP = (UInt32)(92)
global const MATOP_PTAP_SYMBOLIC = (UInt32)(93)
global const MATOP_PTAP_NUMERIC = (UInt32)(94)
global const MATOP_MAT_TRANSPOSE_MULT = (UInt32)(95)
global const MATOP_MAT_TRANSPOSE_MULT_SYMBO = (UInt32)(96)
global const MATOP_MAT_TRANSPOSE_MULT_NUMER = (UInt32)(97)
global const MATOP_CONJUGATE = (UInt32)(102)
global const MATOP_SET_VALUES_ROW = (UInt32)(104)
global const MATOP_REAL_PART = (UInt32)(105)
global const MATOP_IMAGINARY_PART = (UInt32)(106)
global const MATOP_GET_ROW_UPPER_TRIANGULAR = (UInt32)(107)
global const MATOP_RESTORE_ROW_UPPER_TRIANG = (UInt32)(108)
global const MATOP_MAT_SOLVE = (UInt32)(109)
global const MATOP_GET_REDUNDANT_MATRIX = (UInt32)(110)
global const MATOP_GET_ROW_MIN = (UInt32)(111)
global const MATOP_GET_COLUMN_VECTOR = (UInt32)(112)
global const MATOP_MISSING_DIAGONAL = (UInt32)(113)
global const MATOP_GET_SEQ_NONZERO_STRUCTUR = (UInt32)(114)
global const MATOP_CREATE = (UInt32)(115)
global const MATOP_GET_GHOSTS = (UInt32)(116)
global const MATOP_GET_LOCAL_SUB_MATRIX = (UInt32)(117)
global const MATOP_RESTORE_LOCALSUB_MATRIX = (UInt32)(118)
global const MATOP_MULT_DIAGONAL_BLOCK = (UInt32)(119)
global const MATOP_HERMITIAN_TRANSPOSE = (UInt32)(120)
global const MATOP_MULT_HERMITIAN_TRANSPOSE = (UInt32)(121)
global const MATOP_MULT_HERMITIAN_TRANS_ADD = (UInt32)(122)
global const MATOP_GET_MULTI_PROC_BLOCK = (UInt32)(123)
global const MATOP_FIND_NONZERO_ROWS = (UInt32)(124)
global const MATOP_GET_COLUMN_NORMS = (UInt32)(125)
global const MATOP_INVERT_BLOCK_DIAGONAL = (UInt32)(126)
global const MATOP_GET_SUB_MATRICES_PARALLE = (UInt32)(128)
global const MATOP_SET_VALUES_BATCH = (UInt32)(129)
global const MATOP_TRANSPOSE_MAT_MULT = (UInt32)(130)
global const MATOP_TRANSPOSE_MAT_MULT_SYMBO = (UInt32)(131)
global const MATOP_TRANSPOSE_MAT_MULT_NUMER = (UInt32)(132)
global const MATOP_TRANSPOSE_COLORING_CREAT = (UInt32)(133)
global const MATOP_TRANS_COLORING_APPLY_SPT = (UInt32)(134)
global const MATOP_TRANS_COLORING_APPLY_DEN = (UInt32)(135)
global const MATOP_RART = (UInt32)(136)
global const MATOP_RART_SYMBOLIC = (UInt32)(137)
global const MATOP_RART_NUMERIC = (UInt32)(138)
global const MATOP_SET_BLOCK_SIZES = (UInt32)(139)
global const MATOP_AYPX = (UInt32)(140)
global const MATOP_RESIDUAL = (UInt32)(141)
global const MATOP_FDCOLORING_SETUP = (UInt32)(142)
global const MATOP_MPICONCATENATESEQ = (UInt32)(144)
# end enum MatOperation

