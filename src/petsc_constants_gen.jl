typealias PetscErrorType Int32
global const PETSC_ERROR_INITIAL = Int32( 0 )
global const PETSC_ERROR_REPEAT = Int32( 1 )
global const PETSC_ERROR_IN_CXX = Int32( 2 )

typealias KSPConvergedReason Cint
global const KSP_CONVERGED_RTOL_NORMAL = Cint( 1 )
global const KSP_CONVERGED_ATOL_NORMAL = Cint( 9 )
global const KSP_CONVERGED_RTOL = Cint( 2 )
global const KSP_CONVERGED_ATOL = Cint( 3 )
global const KSP_CONVERGED_ITS = Cint( 4 )
global const KSP_CONVERGED_CG_NEG_CURVE = Cint( 5 )
global const KSP_CONVERGED_CG_CONSTRAINED = Cint( 6 )
global const KSP_CONVERGED_STEP_LENGTH = Cint( 7 )
global const KSP_CONVERGED_HAPPY_BREAKDOWN = Cint( 8 )
global const KSP_DIVERGED_NULL = Cint( -2 )
global const KSP_DIVERGED_ITS = Cint( -3 )
global const KSP_DIVERGED_DTOL = Cint( -4 )
global const KSP_DIVERGED_BREAKDOWN = Cint( -5 )
global const KSP_DIVERGED_BREAKDOWN_BICG = Cint( -6 )
global const KSP_DIVERGED_NONSYMMETRIC = Cint( -7 )
global const KSP_DIVERGED_INDEFINITE_PC = Cint( -8 )
global const KSP_DIVERGED_NANORINF = Cint( -9 )
global const KSP_DIVERGED_INDEFINITE_MAT = Cint( -10 )
global const KSP_DIVERGED_PCSETUP_FAILED = Cint( -11 )
global const KSP_CONVERGED_ITERATING = Cint( 0 )

typealias MatOption Cint
global const MAT_OPTION_MIN = Cint( -3 )
global const MAT_NEW_NONZERO_LOCATION_ERR = Cint( 11 )
global const MAT_UNUSED_NONZERO_LOCATION_ERR = Cint( -2 )
global const MAT_NEW_NONZERO_ALLOCATION_ERR = Cint( 19 )
global const MAT_ROW_ORIENTED = Cint( -1 )
global const MAT_SYMMETRIC = Cint( 1 )
global const MAT_STRUCTURALLY_SYMMETRIC = Cint( 2 )
global const MAT_NEW_DIAGONALS = Cint( 3 )
global const MAT_IGNORE_OFF_PROC_ENTRIES = Cint( 4 )
global const MAT_USE_HASH_TABLE = Cint( 5 )
global const MAT_KEEP_NONZERO_PATTERN = Cint( 6 )
global const MAT_IGNORE_ZERO_ENTRIES = Cint( 7 )
global const MAT_USE_INODES = Cint( 8 )
global const MAT_HERMITIAN = Cint( 9 )
global const MAT_SYMMETRY_ETERNAL = Cint( 10 )
global const MAT_IGNORE_LOWER_TRIANGULAR = Cint( 12 )
global const MAT_ERROR_LOWER_TRIANGULAR = Cint( 13 )
global const MAT_GETROW_UPPERTRIANGULAR = Cint( 14 )
global const MAT_SPD = Cint( 15 )
global const MAT_NO_OFF_PROC_ZERO_ROWS = Cint( 16 )
global const MAT_NO_OFF_PROC_ENTRIES = Cint( 17 )
global const MAT_NEW_NONZERO_LOCATIONS = Cint( 18 )
global const MAT_OPTION_MAX = Cint( 21 )

typealias MatInfoType Int32
global const MAT_LOCAL = Int32( 1 )
global const MAT_GLOBAL_MAX = Int32( 2 )
global const MAT_GLOBAL_SUM = Int32( 3 )

typealias KSPNormType Cint
global const KSP_NORM_DEFAULT = Cint( -1 )
global const KSP_NORM_NONE = Cint( 0 )
global const KSP_NORM_PRECONDITIONED = Cint( 1 )
global const KSP_NORM_UNPRECONDITIONED = Cint( 2 )
global const KSP_NORM_NATURAL = Cint( 3 )

typealias MatOperation UInt32
global const MATOP_SET_VALUES = UInt32( 0 )
global const MATOP_GET_ROW = UInt32( 1 )
global const MATOP_RESTORE_ROW = UInt32( 2 )
global const MATOP_MULT = UInt32( 3 )
global const MATOP_MULT_ADD = UInt32( 4 )
global const MATOP_MULT_TRANSPOSE = UInt32( 5 )
global const MATOP_MULT_TRANSPOSE_ADD = UInt32( 6 )
global const MATOP_SOLVE = UInt32( 7 )
global const MATOP_SOLVE_ADD = UInt32( 8 )
global const MATOP_SOLVE_TRANSPOSE = UInt32( 9 )
global const MATOP_SOLVE_TRANSPOSE_ADD = UInt32( 10 )
global const MATOP_LUFACTOR = UInt32( 11 )
global const MATOP_CHOLESKYFACTOR = UInt32( 12 )
global const MATOP_SOR = UInt32( 13 )
global const MATOP_TRANSPOSE = UInt32( 14 )
global const MATOP_GETINFO = UInt32( 15 )
global const MATOP_EQUAL = UInt32( 16 )
global const MATOP_GET_DIAGONAL = UInt32( 17 )
global const MATOP_DIAGONAL_SCALE = UInt32( 18 )
global const MATOP_NORM = UInt32( 19 )
global const MATOP_ASSEMBLY_BEGIN = UInt32( 20 )
global const MATOP_ASSEMBLY_END = UInt32( 21 )
global const MATOP_SET_OPTION = UInt32( 22 )
global const MATOP_ZERO_ENTRIES = UInt32( 23 )
global const MATOP_ZERO_ROWS = UInt32( 24 )
global const MATOP_LUFACTOR_SYMBOLIC = UInt32( 25 )
global const MATOP_LUFACTOR_NUMERIC = UInt32( 26 )
global const MATOP_CHOLESKY_FACTOR_SYMBOLIC = UInt32( 27 )
global const MATOP_CHOLESKY_FACTOR_NUMERIC = UInt32( 28 )
global const MATOP_SETUP_PREALLOCATION = UInt32( 29 )
global const MATOP_ILUFACTOR_SYMBOLIC = UInt32( 30 )
global const MATOP_ICCFACTOR_SYMBOLIC = UInt32( 31 )
global const MATOP_DUPLICATE = UInt32( 34 )
global const MATOP_FORWARD_SOLVE = UInt32( 35 )
global const MATOP_BACKWARD_SOLVE = UInt32( 36 )
global const MATOP_ILUFACTOR = UInt32( 37 )
global const MATOP_ICCFACTOR = UInt32( 38 )
global const MATOP_AXPY = UInt32( 39 )
global const MATOP_GET_SUBMATRICES = UInt32( 40 )
global const MATOP_INCREASE_OVERLAP = UInt32( 41 )
global const MATOP_GET_VALUES = UInt32( 42 )
global const MATOP_COPY = UInt32( 43 )
global const MATOP_GET_ROW_MAX = UInt32( 44 )
global const MATOP_SCALE = UInt32( 45 )
global const MATOP_SHIFT = UInt32( 46 )
global const MATOP_DIAGONAL_SET = UInt32( 47 )
global const MATOP_ZERO_ROWS_COLUMNS = UInt32( 48 )
global const MATOP_SET_RANDOM = UInt32( 49 )
global const MATOP_GET_ROW_IJ = UInt32( 50 )
global const MATOP_RESTORE_ROW_IJ = UInt32( 51 )
global const MATOP_GET_COLUMN_IJ = UInt32( 52 )
global const MATOP_RESTORE_COLUMN_IJ = UInt32( 53 )
global const MATOP_FDCOLORING_CREATE = UInt32( 54 )
global const MATOP_COLORING_PATCH = UInt32( 55 )
global const MATOP_SET_UNFACTORED = UInt32( 56 )
global const MATOP_PERMUTE = UInt32( 57 )
global const MATOP_SET_VALUES_BLOCKED = UInt32( 58 )
global const MATOP_GET_SUBMATRIX = UInt32( 59 )
global const MATOP_DESTROY = UInt32( 60 )
global const MATOP_VIEW = UInt32( 61 )
global const MATOP_CONVERT_FROM = UInt32( 62 )
global const MATOP_MATMAT_MULT = UInt32( 63 )
global const MATOP_MATMAT_MULT_SYMBOLIC = UInt32( 64 )
global const MATOP_MATMAT_MULT_NUMERIC = UInt32( 65 )
global const MATOP_SET_LOCAL_TO_GLOBAL_MAP = UInt32( 66 )
global const MATOP_SET_VALUES_LOCAL = UInt32( 67 )
global const MATOP_ZERO_ROWS_LOCAL = UInt32( 68 )
global const MATOP_GET_ROW_MAX_ABS = UInt32( 69 )
global const MATOP_GET_ROW_MIN_ABS = UInt32( 70 )
global const MATOP_CONVERT = UInt32( 71 )
global const MATOP_SET_COLORING = UInt32( 72 )
global const MATOP_SET_VALUES_ADIFOR = UInt32( 74 )
global const MATOP_FD_COLORING_APPLY = UInt32( 75 )
global const MATOP_SET_FROM_OPTIONS = UInt32( 76 )
global const MATOP_MULT_CONSTRAINED = UInt32( 77 )
global const MATOP_MULT_TRANSPOSE_CONSTRAIN = UInt32( 78 )
global const MATOP_FIND_ZERO_DIAGONALS = UInt32( 79 )
global const MATOP_MULT_MULTIPLE = UInt32( 80 )
global const MATOP_SOLVE_MULTIPLE = UInt32( 81 )
global const MATOP_GET_INERTIA = UInt32( 82 )
global const MATOP_LOAD = UInt32( 83 )
global const MATOP_IS_SYMMETRIC = UInt32( 84 )
global const MATOP_IS_HERMITIAN = UInt32( 85 )
global const MATOP_IS_STRUCTURALLY_SYMMETRIC = UInt32( 86 )
global const MATOP_SET_VALUES_BLOCKEDLOCAL = UInt32( 87 )
global const MATOP_GET_VECS = UInt32( 88 )
global const MATOP_MAT_MULT = UInt32( 89 )
global const MATOP_MAT_MULT_SYMBOLIC = UInt32( 90 )
global const MATOP_MAT_MULT_NUMERIC = UInt32( 91 )
global const MATOP_PTAP = UInt32( 92 )
global const MATOP_PTAP_SYMBOLIC = UInt32( 93 )
global const MATOP_PTAP_NUMERIC = UInt32( 94 )
global const MATOP_MAT_TRANSPOSE_MULT = UInt32( 95 )
global const MATOP_MAT_TRANSPOSE_MULT_SYMBO = UInt32( 96 )
global const MATOP_MAT_TRANSPOSE_MULT_NUMER = UInt32( 97 )
global const MATOP_CONJUGATE = UInt32( 102 )
global const MATOP_SET_VALUES_ROW = UInt32( 104 )
global const MATOP_REAL_PART = UInt32( 105 )
global const MATOP_IMAGINARY_PART = UInt32( 106 )
global const MATOP_GET_ROW_UPPER_TRIANGULAR = UInt32( 107 )
global const MATOP_RESTORE_ROW_UPPER_TRIANG = UInt32( 108 )
global const MATOP_MAT_SOLVE = UInt32( 109 )
global const MATOP_GET_REDUNDANT_MATRIX = UInt32( 110 )
global const MATOP_GET_ROW_MIN = UInt32( 111 )
global const MATOP_GET_COLUMN_VECTOR = UInt32( 112 )
global const MATOP_MISSING_DIAGONAL = UInt32( 113 )
global const MATOP_GET_SEQ_NONZERO_STRUCTUR = UInt32( 114 )
global const MATOP_CREATE = UInt32( 115 )
global const MATOP_GET_GHOSTS = UInt32( 116 )
global const MATOP_GET_LOCAL_SUB_MATRIX = UInt32( 117 )
global const MATOP_RESTORE_LOCALSUB_MATRIX = UInt32( 118 )
global const MATOP_MULT_DIAGONAL_BLOCK = UInt32( 119 )
global const MATOP_HERMITIAN_TRANSPOSE = UInt32( 120 )
global const MATOP_MULT_HERMITIAN_TRANSPOSE = UInt32( 121 )
global const MATOP_MULT_HERMITIAN_TRANS_ADD = UInt32( 122 )
global const MATOP_GET_MULTI_PROC_BLOCK = UInt32( 123 )
global const MATOP_FIND_NONZERO_ROWS = UInt32( 124 )
global const MATOP_GET_COLUMN_NORMS = UInt32( 125 )
global const MATOP_INVERT_BLOCK_DIAGONAL = UInt32( 126 )
global const MATOP_GET_SUB_MATRICES_PARALLE = UInt32( 128 )
global const MATOP_SET_VALUES_BATCH = UInt32( 129 )
global const MATOP_TRANSPOSE_MAT_MULT = UInt32( 130 )
global const MATOP_TRANSPOSE_MAT_MULT_SYMBO = UInt32( 131 )
global const MATOP_TRANSPOSE_MAT_MULT_NUMER = UInt32( 132 )
global const MATOP_TRANSPOSE_COLORING_CREAT = UInt32( 133 )
global const MATOP_TRANS_COLORING_APPLY_SPT = UInt32( 134 )
global const MATOP_TRANS_COLORING_APPLY_DEN = UInt32( 135 )
global const MATOP_RART = UInt32( 136 )
global const MATOP_RART_SYMBOLIC = UInt32( 137 )
global const MATOP_RART_NUMERIC = UInt32( 138 )
global const MATOP_SET_BLOCK_SIZES = UInt32( 139 )
global const MATOP_AYPX = UInt32( 140 )
global const MATOP_RESIDUAL = UInt32( 141 )
global const MATOP_FDCOLORING_SETUP = UInt32( 142 )
global const MATOP_MPICONCATENATESEQ = UInt32( 144 )

typealias InsertMode Cint
global const INSERT_VALUES = Cint( 1 )
global const ADD_VALUES = Cint( 2 )

typealias KSPType ASCIIString
global const KSPRICHARDSON = ASCIIString( "richardson" )
global const KSPCHEBYSHEV = ASCIIString( "chebyshev" )
global const KSPCG = ASCIIString( "cg" )
global const KSPGROPPCG = ASCIIString( "groppcg" )
global const KSPPIPECG = ASCIIString( "pipecg" )
global const KSPCGNE = ASCIIString( "cgne" )
global const KSPNASH = ASCIIString( "nash" )
global const KSPSTCG = ASCIIString( "stcg" )
global const KSPGLTR = ASCIIString( "gltr" )
global const KSPFCG = ASCIIString( "fcg" )
global const KSPGMRES = ASCIIString( "gmres" )
global const KSPFGMRES = ASCIIString( "fgmres" )
global const KSPLGMRES = ASCIIString( "lgmres" )
global const KSPDGMRES = ASCIIString( "dgmres" )
global const KSPPGMRES = ASCIIString( "pgmres" )
global const KSPTCQMR = ASCIIString( "tcqmr" )
global const KSPBCGS = ASCIIString( "bcgs" )
global const KSPIBCGS = ASCIIString( "ibcgs" )
global const KSPFBCGS = ASCIIString( "fbcgs" )
global const KSPFBCGSR = ASCIIString( "fbcgsr" )
global const KSPBCGSL = ASCIIString( "bcgsl" )
global const KSPCGS = ASCIIString( "cgs" )
global const KSPTFQMR = ASCIIString( "tfqmr" )
global const KSPCR = ASCIIString( "cr" )
global const KSPPIPECR = ASCIIString( "pipecr" )
global const KSPLSQR = ASCIIString( "lsqr" )
global const KSPPREONLY = ASCIIString( "preonly" )
global const KSPQCG = ASCIIString( "qcg" )
global const KSPBICG = ASCIIString( "bicg" )
global const KSPMINRES = ASCIIString( "minres" )
global const KSPSYMMLQ = ASCIIString( "symmlq" )
global const KSPLCD = ASCIIString( "lcd" )
global const KSPPYTHON = ASCIIString( "python" )
global const KSPGCR = ASCIIString( "gcr" )

typealias PCJacobiType Int32
global const PC_JACOBI_DIAGONAL = Int32( 0 )
global const PC_JACOBI_ROWMAX = Int32( 1 )
global const PC_JACOBI_ROWSUM = Int32( 2 )

typealias PCType ASCIIString
global const PCNONE = ASCIIString( "none" )
global const PCJACOBI = ASCIIString( "jacobi" )
global const PCSOR = ASCIIString( "sor" )
global const PCLU = ASCIIString( "lu" )
global const PCSHELL = ASCIIString( "shell" )
global const PCBJACOBI = ASCIIString( "bjacobi" )
global const PCMG = ASCIIString( "mg" )
global const PCEISENSTAT = ASCIIString( "eisenstat" )
global const PCILU = ASCIIString( "ilu" )
global const PCICC = ASCIIString( "icc" )
global const PCASM = ASCIIString( "asm" )
global const PCGASM = ASCIIString( "gasm" )
global const PCKSP = ASCIIString( "ksp" )
global const PCCOMPOSITE = ASCIIString( "composite" )
global const PCREDUNDANT = ASCIIString( "redundant" )
global const PCSPAI = ASCIIString( "spai" )
global const PCNN = ASCIIString( "nn" )
global const PCCHOLESKY = ASCIIString( "cholesky" )
global const PCPBJACOBI = ASCIIString( "pbjacobi" )
global const PCMAT = ASCIIString( "mat" )
global const PCHYPRE = ASCIIString( "hypre" )
global const PCPARMS = ASCIIString( "parms" )
global const PCFIELDSPLIT = ASCIIString( "fieldsplit" )
global const PCTFS = ASCIIString( "tfs" )
global const PCML = ASCIIString( "ml" )
global const PCGALERKIN = ASCIIString( "galerkin" )
global const PCEXOTIC = ASCIIString( "exotic" )
global const PCCP = ASCIIString( "cp" )
global const PCBFBT = ASCIIString( "bfbt" )
global const PCLSC = ASCIIString( "lsc" )
global const PCPYTHON = ASCIIString( "python" )
global const PCPFMG = ASCIIString( "pfmg" )
global const PCSYSPFMG = ASCIIString( "syspfmg" )
global const PCREDISTRIBUTE = ASCIIString( "redistribute" )
global const PCSVD = ASCIIString( "svd" )
global const PCGAMG = ASCIIString( "gamg" )
global const PCSACUSP = ASCIIString( "sacusp" )
global const PCSACUSPPOLY = ASCIIString( "sacusppoly" )
global const PCBICGSTABCUSP = ASCIIString( "bicgstabcusp" )
global const PCAINVCUSP = ASCIIString( "ainvcusp" )
global const PCBDDC = ASCIIString( "bddc" )
global const PCKACZMARZ = ASCIIString( "kaczmarz" )

typealias MatAssemblyType Cint
global const MAT_FLUSH_ASSEMBLY = Cint( 1 )
global const MAT_FINAL_ASSEMBLY = Cint( 0 )

typealias VecType ASCIIString
global const VECSEQ = ASCIIString( "seq" )
global const VECMPI = ASCIIString( "mpi" )
global const VECSTANDARD = ASCIIString( "standard" )
global const VECSHARED = ASCIIString( "shared" )
global const VECSEQCUSP = ASCIIString( "seqcusp" )
global const VECMPICUSP = ASCIIString( "mpicusp" )
global const VECCUSP = ASCIIString( "cusp" )
global const VECSEQVIENNACL = ASCIIString( "seqviennacl" )
global const VECMPIVIENNACL = ASCIIString( "mpiviennacl" )
global const VECVIENNACL = ASCIIString( "viennacl" )
global const VECSEQCUDA = ASCIIString( "seqcuda" )
global const VECMPICUDA = ASCIIString( "mpicuda" )
global const VECCUDA = ASCIIString( "cuda" )
global const VECNEST = ASCIIString( "nest" )

typealias PCSide Cint
global const PC_SIDE_DEFAULT = Cint( -1 )
global const PC_LEFT = Cint( 0 )
global const PC_RIGHT = Cint( 1 )
global const PC_SYMMETRIC = Cint( 2 )

typealias MatType ASCIIString
global const MATSAME = ASCIIString( "same" )
global const MATMAIJ = ASCIIString( "maij" )
global const MATSEQMAIJ = ASCIIString( "seqmaij" )
global const MATMPIMAIJ = ASCIIString( "mpimaij" )
global const MATIS = ASCIIString( "is" )
global const MATAIJ = ASCIIString( "aij" )
global const MATSEQAIJ = ASCIIString( "seqaij" )
global const MATMPIAIJ = ASCIIString( "mpiaij" )
global const MATAIJCRL = ASCIIString( "aijcrl" )
global const MATSEQAIJCRL = ASCIIString( "seqaijcrl" )
global const MATMPIAIJCRL = ASCIIString( "mpiaijcrl" )
global const MATAIJCUSP = ASCIIString( "aijcusp" )
global const MATSEQAIJCUSP = ASCIIString( "seqaijcusp" )
global const MATMPIAIJCUSP = ASCIIString( "mpiaijcusp" )
global const MATAIJCUSPARSE = ASCIIString( "aijcusparse" )
global const MATSEQAIJCUSPARSE = ASCIIString( "seqaijcusparse" )
global const MATMPIAIJCUSPARSE = ASCIIString( "mpiaijcusparse" )
global const MATAIJVIENNACL = ASCIIString( "aijviennacl" )
global const MATSEQAIJVIENNACL = ASCIIString( "seqaijviennacl" )
global const MATMPIAIJVIENNACL = ASCIIString( "mpiaijviennacl" )
global const MATAIJPERM = ASCIIString( "aijperm" )
global const MATSEQAIJPERM = ASCIIString( "seqaijperm" )
global const MATMPIAIJPERM = ASCIIString( "mpiaijperm" )
global const MATSHELL = ASCIIString( "shell" )
global const MATDENSE = ASCIIString( "dense" )
global const MATSEQDENSE = ASCIIString( "seqdense" )
global const MATMPIDENSE = ASCIIString( "mpidense" )
global const MATELEMENTAL = ASCIIString( "elemental" )
global const MATBAIJ = ASCIIString( "baij" )
global const MATSEQBAIJ = ASCIIString( "seqbaij" )
global const MATMPIBAIJ = ASCIIString( "mpibaij" )
global const MATMPIADJ = ASCIIString( "mpiadj" )
global const MATSBAIJ = ASCIIString( "sbaij" )
global const MATSEQSBAIJ = ASCIIString( "seqsbaij" )
global const MATMPISBAIJ = ASCIIString( "mpisbaij" )
global const MATSEQBSTRM = ASCIIString( "seqbstrm" )
global const MATMPIBSTRM = ASCIIString( "mpibstrm" )
global const MATBSTRM = ASCIIString( "bstrm" )
global const MATSEQSBSTRM = ASCIIString( "seqsbstrm" )
global const MATMPISBSTRM = ASCIIString( "mpisbstrm" )
global const MATSBSTRM = ASCIIString( "sbstrm" )
global const MATDAAD = ASCIIString( "daad" )
global const MATMFFD = ASCIIString( "mffd" )
global const MATNORMAL = ASCIIString( "normal" )
global const MATLRC = ASCIIString( "lrc" )
global const MATSCATTER = ASCIIString( "scatter" )
global const MATBLOCKMAT = ASCIIString( "blockmat" )
global const MATCOMPOSITE = ASCIIString( "composite" )
global const MATFFT = ASCIIString( "fft" )
global const MATFFTW = ASCIIString( "fftw" )
global const MATSEQCUFFT = ASCIIString( "seqcufft" )
global const MATTRANSPOSEMAT = ASCIIString( "transpose" )
global const MATSCHURCOMPLEMENT = ASCIIString( "schurcomplement" )
global const MATPYTHON = ASCIIString( "python" )
global const MATHYPRESTRUCT = ASCIIString( "hyprestruct" )
global const MATHYPRESSTRUCT = ASCIIString( "hypresstruct" )
global const MATSUBMATRIX = ASCIIString( "submatrix" )
global const MATLOCALREF = ASCIIString( "localref" )
global const MATNEST = ASCIIString( "nest" )

typealias NormType Int32
global const NORM_1 = Int32( 0 )
global const NORM_2 = Int32( 1 )
global const NORM_FROBENIUS = Int32( 2 )
global const NORM_INFINITY = Int32( 3 )
global const NORM_MAX = Int32( 3 )

typealias PetscMatStructure Int32
global const DIFFERENT_NONZERO_PATTERN = Int32( 0 )
global const SUBSET_NONZERO_PATTERN = Int32( 1 )
global const SAME_NONZERO_PATTERN = Int32( 2 )

typealias MatReuse Int32
global const MAT_INITIAL_MATRIX = Int32( 0 )
global const MAT_REUSE_MATRIX = Int32( 1 )
global const MAT_IGNORE_MATRIX = Int32( 2 )

